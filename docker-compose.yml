services:
  db:
    image: postgres:13-alpine
    container_name: db
    environment:
      POSTGRES_DB: pdf_translate
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pdf_translate"]
      interval: 5s
      timeout: 5s
      retries: 5

  rd:
    image: redis:7-alpine
    container_name: rd
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  bk:
    build: ./backend
    container_name: bk
    environment:
      - DATABASE_URL=postgresql://user:password@db/pdf_translate
      - REDIS_URL=redis://rd:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      rd:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  cw:
    build: ./backend
    container_name: cw
    command: celery -A app.workers.celery_worker.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@db/pdf_translate
      - REDIS_URL=redis://rd:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - bk
      - rd
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  fl:
    build: ./backend
    container_name: fl
    command: celery -A app.workers.celery_worker.celery_app flower --port=5555
    environment:
      - REDIS_URL=redis://rd:6379/0
    depends_on:
      - rd
      - cw

  fr:
    build: ./frontend
    container_name: fr
    environment:
      - NEXT_PUBLIC_API_URL=https://apipdf.edcopo.info
    depends_on:
      - bk
    restart: unless-stopped

  cd:
    image: caddy:2-alpine
    container_name: cd
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - fr
      - bk
      - fl

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
